#!/usr/bin/env bash
#      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.
# `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'
#
# github.com/rafi bash exports
# references:
# - https://github.com/milomouse/dotfiles
# - https://github.com/EvanPurkhiser/dots-personal

# OSX
if [[ "$OSTYPE" == "darwin"* ]]; then
	# MacPorts
	export PATH=/opt/local/bin:/opt/local/sbin:$PATH
	export PATH=/opt/local/lib/percona/bin:$PATH
	export PATH=/opt/local/apache2/bin:$PATH
	export MANPATH=/opt/local/share/man:$MANPATH

	# Applications
	export PATH=/Applications/packer:$PATH
fi

# Local bin
export PATH="$HOME/.local/bin:$PATH:bin"

# XDG directories
export XDG_CONFIG_HOME="$HOME/.config"
export  XDG_CACHE_HOME="$HOME/.cache"
export   XDG_DATA_HOME="$HOME/.local/share"

if [[ "$OSTYPE" == "darwin"* ]]; then
	export XDG_RUNTIME_DIR="$XDG_CACHE_HOME"
else
	export XAUTHORITY="$XDG_CACHE_HOME/Xauthority"

	# Set the systemd-style DBUS address
	export DBUS_SESSION_BUS_ADDRESS=unix:path=$XDG_RUNTIME_DIR/bus
	export VDPAU_DRIVER=va_gl
fi

export INPUTRC="$XDG_CONFIG_HOME/bash/inputrc"

# https://github.com/zealdocs/zeal/issues/172
export QT_QPA_PLATFORMTHEME=gnome

export RXVT_SOCKET="$XDG_RUNTIME_DIR/urxvtd"

# Look for terminfo files under data
[ -d "$XDG_DATA_HOME/terminfo" ] && export TERMINFO="$XDG_DATA_HOME/terminfo"

# Set the session ssh-agent socket path (If it's not set)
[ -z "$SSH_AUTH_SOCK" ] && export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent"

# TODO: Using i3, remove this?
hash bspwm 2>/dev/null && export BSPWM_SOCKET="$XDG_RUNTIME_DIR/bswpm-socket"

# Set vimrc's location and source it on vim startup
export VIMINIT='let $MYVIMRC="$XDG_CONFIG_HOME/vim/vimrc" | source $MYVIMRC'

# directories:
export GNUPGHOME="$XDG_CONFIG_HOME/gnupg"
export PASSWORD_STORE_DIR="$HOME/docs/pass/"
export PACKER_CACHE_DIR="$XDG_CACHE_HOME/packer"
export COMPOSER_HOME="$XDG_DATA_HOME/composer"
export MPDCRON_DIR="$XDG_CONFIG_HOME/mpdcron"
export URXVT_PERL_LIB="$XDG_CONFIG_HOME/urxvt/ext"

# GO configuration
if hash go 2>/dev/null
then
	export GOPATH="$HOME/code/go"
	export PATH="$PATH:$GOPATH/bin"
fi

# Haskell cabal configuration
if hash cabal 2>/dev/null
then
	export PATH="$PATH:$HOME/.cabal/bin"
fi

# nodejs's NPM tool configuration
if hash npm 3>/dev/null
then
	export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
	export PATH="$PATH:$HOME/.local/lib/nodejs/bin"
fi

# CPAN configuration
if hash cpan 3>/dev/null
then
	export PERL5LIB="$HOME/.local/lib/perl5${PERL5LIB+:}${PERL5LIB}"
	export PERL_LOCAL_LIB_ROOT="$HOME/.local${PERL_LOCAL_LIB_ROOT+:}${PERL_LOCAL_LIB_ROOT}"
	export PERL_MB_OPT="--install_base \"$HOME/.local\""
	export PERL_MM_OPT="INSTALL_BASE=$HOME/.local"
fi

hash http       2>/dev/null && export HTTPIE_CONFIG_DIR="$XDG_CONFIG_HOME/httpie"
hash psql       2>/dev/null && export            PSQLRC="$XDG_CONFIG_HOME/psql/config"
hash gimp       2>/dev/null && export   GIMP2_DIRECTORY="$XDG_CONFIG_HOME/gimp-2.8"
hash virtualbox 2>/dev/null && export    VBOX_USER_HOME="$XDG_CONFIG_HOME/virtualbox"
hash mplayer    2>/dev/null && export      MPLAYER_HOME="$XDG_CONFIG_HOME/mplayer"
hash mpv        2>/dev/null && export          MPV_HOME="$XDG_CONFIG_HOME/mpv"
hash vagrant    2>/dev/null && export      VAGRANT_HOME="$XDG_DATA_HOME/vagrant"
hash cpanm      2>/dev/null && export    PERL_CPANM_OPT="-l $HOME/.local"

# aria2c cli helper
hash diana 2>/dev/null && export DIANA_SECRET_TOKEN={{ DIANA_TOKEN }}

# Always install ruby gems local to the user
if hash gem 2>/dev/null
then
	export GEMRC="$XDG_CONFIG_HOME/gemrc/config"
	export GEM_HOME="$HOME/.local/lib/ruby/gems/$(ruby -e 'puts RbConfig::CONFIG["ruby_version"]')"
	export GEM_SPEC_CACHE="$XDG_CACHE_HOME/gem/specs"
	export PATH="$PATH:$GEM_HOME/bin"
fi

# Ack configuration
if hash ack 2> /dev/null
then
	export ACKRC="$XDG_CONFIG_HOME/ack/ackrc"
	export ACK_PAGER_COLOR="less -x4SRFX"
fi

# Task warrior configuration
if hash task 2>/dev/null
then
	export TASKRC="$XDG_CONFIG_HOME/task/config"
	export TASKDATA="$XDG_DATA_HOME/task"
fi

# Pull GTK2 RC files from the standard config location, similar to gtk-3.0
[ -e /etc/gtk-2.0 ] && export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"

# configs:
export ANSIBLE_CONFIG="$XDG_CONFIG_HOME/ansible/config"
export MAD_CONFIG="$XDG_CONFIG_HOME/mad/config"
export _Z_DATA="$XDG_CACHE_HOME/z/data"

# files:
export MYSQL_HISTFILE="$XDG_CACHE_HOME/mysql_history"
export LESSHISTFILE="$XDG_CACHE_HOME/less_history"

# settings:
export LESS="-eFiQwMXR"
export LESSCHARSET="UTF-8"
export GREP_OPTIONS="--color=auto"

# Custom flags:

# Detect if SSH connection
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
	export IS_SSH=1
fi

# vim: set ts=2 sw=2 tw=80 noet :

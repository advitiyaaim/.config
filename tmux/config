#      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.
# `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'
#
# github.com/rafi tmux config

#===============================================================
# Behavior
#---------------------------------------------------------------

#set-option -g default-shell "/bin/bash"
#set-option -g default-command "bash -l"
#set-option -g default-path $HOME
set-option -g default-terminal "screen-256color"

set-option -g set-titles on
set-option -g set-titles-string '#T #W tmux{#S}:#I.#P'

set-window-option -g automatic-rename on
set-window-option -g xterm-keys on
set-window-option -g utf8 on

set-option -g set-remain-on-exit off

# scrollback buffer size increase
set-option -g history-limit 6000

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set-option -sg escape-time 0

# tmux messages are displayed for 4 seconds
set-option -g display-time 4000

# Allow the arrow key to be used immediately after changing windows, default is 500
set-option -g repeat-time 300

# focus events enabled for terminals that support them
set-option -g focus-events on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# Start windows and panes from 1
set-option -g base-index 1
set-option -g pane-base-index 1

# Visual notifications
set-option -g visual-bell off
set-option -g visual-activity off
set-option -g visual-content off
set-option -g visual-silence off

# Window Monitoring

set-window-option -g monitor-activity on
set-window-option -g monitor-content "error"
set-window-option -g monitor-silence 60

# Key bindings
#---------------------------------------------------------------

# Act like GNU screen, yse Ctrl+A instead of Ctrl+B
unbind-key C-b
set-option -g prefix C-a

# When tmux is running inside tmux, send prefix with C-a C-a
bind-key C-a send-prefix

# Open new window from current path
bind-key c new-window -c "#{pane_current_path}"
bind-key C run-shell 'TMUX= tmux new-session -t $(tmux display-message -p #S) -s $(tmux display-message -p #S-clone) -d \; switch-client -n \; display-message "session #S cloned"'
bind-key N run-shell 'TMUX= tmux new-session -d \; switch-client -n'

# Use v and g for splitting from current path
unbind-key %
unbind-key '"'
bind-key g split-window -h -c "#{pane_current_path}"
bind-key v split-window -v -c "#{pane_current_path}"

bind-key -n M-Left previous-window
bind-key -n M-Right next-window
bind-key -n M-9 previous-window
bind-key -n M-0 next-window

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Bring back clear screen under tmux prefix
bind-key C-l send-keys 'C-l'

# Toggle synchronized input to all panes in current window
bind-key S set-window-option synchronize-panes

bind-key Tab last-window
bind-key a send-prefix

# Use a tick for renaming the window prompt.
unbind-key ','
bind-key ` command-prompt -I '#W' "rename-window '%%'"

bind-key \ command-prompt -p "Set default-path to: " "set default-path %%"

# open a man page in new pane
bind-key / command-prompt "split-window -h 'exec man %%'"

# quick view of processes
bind-key '~' split-window -h "exec htop"

# Help screen: rebind list-keys window into a new pane
bind-key ? split-window -h 'exec tmux list-keys | less'

# force a reload of the config file
bind-key r source-file $XDG_CONFIG_HOME/tmux/config

#bind-key R respawn-window
bind-key R refresh-client
bind-key * list-clients

# Search for previous error
bind-key e copy-mode \; send-keys "?error" C-m

# Disable Ctrl+Arrows to maintain word jump in non vi-mode
unbind-key -n C-Left
unbind-key -n C-Right
unbind-key -n C-Up
unbind-key -n C-Down

# Disable arrows, use 'em for easy pane resizing
bind-key -n M-n resize-pane -L 5
bind-key -n M-. resize-pane -R 5
bind-key -n M-m resize-pane -D 5
bind-key -n M-, resize-pane -U 5

#===============================================================
# Control
#---------------------------------------------------------------

# bind vi key-mapping
set-option -g status-keys vi

# vi-style controls for copy mode
set-window-option -g mode-keys vi

# https://wiki.archlinux.org/index.php/Tmux#Browsing_URL.27s
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# Copy/paste interop
bind-key C-c run "tmux show-buffer | xsel -ib --logfile $XDG_CACHE_HOME/xsel.log"
bind-key C-v run "tmux set-buffer \"$(xsel -ob --logfile $XDG_CACHE_HOME/xsel.log)\"; tmux paste-buffer"

#bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'y' copy-pipe "xsel -ib --logfile $XDG_CACHE_HOME/xsel.log >/dev/null"
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'V' rectangle-toggle

#===============================================================
# Mouse
#---------------------------------------------------------------

# Allows scrolling and selecting in copy-mode
set-option -g mouse-utf8 on
set-option -g mode-mouse on
set-option -g mouse-select-window on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on

# Toggle mouse on with ^a m
bind-key m \
  set-option -g mode-mouse on \;\
  set-option -g mouse-resize-pane on \;\
  set-option -g mouse-select-pane on \;\
  set-option -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^a M
bind-key M \
  set-option -g mode-mouse off \;\
  set-option -g mouse-resize-pane off \;\
  set-option -g mouse-select-pane off \;\
  set-option -g mouse-select-window off \;\
  display 'Mouse: OFF'

#===============================================================
# Look n Feel
#---------------------------------------------------------------
#
# *-attr options accept: none, bright (or bold), dim, underscore, blink,
#                        reverse, hidden, or italics.

set-option -g message-fg colour11
set-option -g message-bg colour236
set-option -g message-attr none
set-option -g message-command-fg colour253
set-option -g message-command-bg colour236
set-option -g message-command-attr none

set-option -g pane-border-fg colour240
set-option -g pane-border-bg default
set-option -g pane-active-border-fg colour4
set-option -g pane-active-border-bg colour235
set-option -g display-panes-active-colour colour220
set-option -g display-panes-colour colour74

set-window-option -g mode-fg colour11
set-window-option -g mode-bg colour236
set-window-option -g mode-attr none

set-window-option -g clock-mode-colour colour64
set-window-option -g clock-mode-style 24

#===============================================================
# Status lines
#---------------------------------------------------------------

set-option -g status on
set-option -g status-position top
set-option -g status-utf8 on

# Refresh 'status-left' and 'status-right' more often
set-option -g status-interval 8

set-option -g status-fg colour239
set-option -g status-bg colour236
set-option -g status-attr default

set-option -g status-left-length 30
set-option -g status-left-fg colour254
set-option -g status-left-bg colour241
set-option -g status-left-attr none
set-option -g status-left ' #S #[fg=colour241,bg=colour235]⮀#[fg=colour234,bg=colour236]░'
set-option -g status-right-length 65
set-option -g status-right-fg colour245
set-option -g status-right-bg default
set-option -g status-right-attr none
set-option -g status-right '#{?client_prefix,#[fg=colour253]#[bg=colour4]<Prefix>#[default]  ,}#[default]#(cut -d " " -f 1-3 /proc/loadavg) #[fg=colour241]⮃ #[default]#h '

set-window-option -g window-status-fg colour247
set-window-option -g window-status-bg colour236
set-window-option -g window-status-attr none
set-window-option -g window-status-separator ""
set-window-option -g window-status-format " #[fg=colour243]#I#[fg=colour247]#F#[default]#W #[fg=colour236,bg=colour235]⮀#[fg=colour234,bg=default]░"
set-window-option -g window-status-current-fg colour251
set-window-option -g window-status-current-bg colour239
set-window-option -g window-status-current-attr none
set-window-option -g window-status-current-format "#[fg=colour235]░#[fg=colour235]#I#[fg=colour235]#F#[default]#W #[fg=colour238]#[fg=colour239,bg=colour235]⮀#[fg=colour234,bg=colour236]░"

set-window-option -g window-status-activity-fg colour254
set-window-option -g window-status-activity-bg colour236
set-window-option -g window-status-activity-attr none
set-window-option -g window-status-content-fg colour70
set-window-option -g window-status-content-bg colour236
set-window-option -g window-status-content-attr none
set-window-option -g window-status-bell-fg colour169
set-window-option -g window-status-bell-bg colour236
set-window-option -g window-status-bell-attr none
set-window-option -g window-status-last-fg colour247
set-window-option -g window-status-last-bg colour236
set-window-option -g window-status-last-attr none

#  vim: set ts=2 sw=2 tw=80 noet :

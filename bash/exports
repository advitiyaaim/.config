#!/usr/bin/env bash
#      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.
# `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'
#
# github.com/rafi/.config bash/exports
# references:
# - https://github.com/milomouse/dotfiles
# - https://github.com/EvanPurkhiser/dots-personal
# - https://wiki.archlinux.org/index.php/XDG_Base_Directory_support
# - https://github.com/davidosomething/dotfiles

# XDG directories
export XDG_CONFIG_HOME="$HOME/.config"
export  XDG_CACHE_HOME="$HOME/.cache"
export   XDG_DATA_HOME="$HOME/.local/share"

# OSX
if [[ "$OSTYPE" == "darwin"* ]]; then
	export PREFIX=/opt/local
	export XINITRC="$XDG_CONFIG_HOME"/xorg/xinitrc_osx
	export XDG_RUNTIME_DIR="/tmp/run"
	[ -d "$XDG_RUNTIME_DIR" ] || mkdir -m 0700 -p "$XDG_RUNTIME_DIR"

	PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin

	# MacPorts
	export PATH=/opt/local/bin:/opt/local/sbin:$PATH
	export MANPATH=/opt/local/share/man:$MANPATH

	# Python per user site-packages directory
	export PATH="$PATH:$HOME/Library/Python/3.5/bin"
	export PATH="$PATH:$HOME/Library/Python/2.7/bin"

# Linux
else
	export PREFIX=/usr
	export XAUTHORITY="$XDG_CACHE_HOME/Xauthority"
	export XINITRC="$XDG_CONFIG_HOME"/xorg/xinitrc

	# Python per user site-packages directory
	export PATH="$PATH:$HOME/.local/lib/python3.5/bin"
	export PATH="$PATH:$HOME/.local/lib/python2.7/bin"

	# Set the systemd-style DBUS address
	export DBUS_SESSION_BUS_ADDRESS=unix:path=$XDG_RUNTIME_DIR/bus
fi

# Google Cloud SDK PATH setting
if [ -d "$XDG_DATA_HOME/gcloud/bin" ]; then
	export PATH="$XDG_DATA_HOME/gcloud/bin:$PATH"
fi

# Local bin
export PATH="$HOME/.local/bin:$PATH:bin"

# https://github.com/zealdocs/zeal/issues/172
export QT_QPA_PLATFORMTHEME=gnome

# Forces QT to use GTK icons
export DESKTOP_SESSION=gnome

# Pull GTK2 RC files from the standard config location, similar to gtk-3.0
[ -e /etc/gtk-2.0 ] && export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"

# Set the session ssh-agent socket path (If it's not set)
[ -z "$SSH_AUTH_SOCK" ] && export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent"

# Look for terminfo files under data
if [ -d "$XDG_DATA_HOME/terminfo" ]; then
	export TERMINFO="$XDG_DATA_HOME/terminfo"
	export TERMINFO_DIRS="$XDG_DATA_HOME/terminfo:$PREFIX/share/terminfo"
fi

export INPUTRC="$XDG_CONFIG_HOME/bash/inputrc"
export RXVT_SOCKET="$XDG_RUNTIME_DIR/urxvtd"
export GNUPGHOME="$XDG_CONFIG_HOME/gnupg"
export PASSWORD_STORE_DIR="$HOME/docs/pass/"
export PACKER_CACHE_DIR="$XDG_CACHE_HOME/packer"
export COMPOSER_HOME="$XDG_CACHE_HOME/composer"
export MPDCRON_DIR="$XDG_CONFIG_HOME/mpdcron"
export URXVT_PERL_LIB="$XDG_CONFIG_HOME/urxvt/ext"
export MAD_CONFIG="$XDG_CONFIG_HOME/mad/config"
export WEGORC="$XDG_CONFIG_HOME/wego/config"
export _Z_DATA="$XDG_CACHE_HOME/z/data"
export MEMO_HOME="$HOME/docs/blog"
export MYSQL_HISTFILE="$XDG_CACHE_HOME/mysql_history"
export LESSHISTFILE="$XDG_CACHE_HOME/less_history"
export LESSKEY="$XDG_CONFIG_HOME/lesskey"
export WAKATIME_HOME="$XDG_DATA_HOME/wakatime"

hash bspwm      2>/dev/null && export      BSPWM_SOCKET="$XDG_RUNTIME_DIR/bswpm-socket"
hash http       2>/dev/null && export HTTPIE_CONFIG_DIR="$XDG_CONFIG_HOME/httpie"
hash wget       2>/dev/null && export            WGETRC="$XDG_CONFIG_HOME/wget/config"
hash gimp       2>/dev/null && export   GIMP2_DIRECTORY="$XDG_CONFIG_HOME/gimp-2.8"
hash virtualbox 2>/dev/null && export    VBOX_USER_HOME="$XDG_CONFIG_HOME/virtualbox"
hash mplayer    2>/dev/null && export      MPLAYER_HOME="$XDG_CONFIG_HOME/mplayer"
hash mpv        2>/dev/null && export          MPV_HOME="$XDG_CONFIG_HOME/mpv"
hash vagrant    2>/dev/null && export      VAGRANT_HOME="$XDG_DATA_HOME/vagrant"
hash sshrc      2>/dev/null && export           SSHHOME="$XDG_CONFIG_HOME/sshrc"

export TMUXP_CONFIGDIR="$XDG_CONFIG_HOME/tmuxp"

# Android SDK and tools
if [ -d "${HOME}/Library/Android/sdk" ]; then
	export ANDROID_HOME=${HOME}/Library/Android/sdk
	export PATH=${PATH}:${ANDROID_HOME}/tools
	export PATH=${PATH}:${ANDROID_HOME}/platform-tools
fi

# Load only ranger's user config
export RANGER_LOAD_DEFAULT_RC=FALSE

# Atom editor
export ATOM_HOME="$XDG_DATA_HOME"/atom

# IPython profile directory
export IPYTHONDIR="$XDG_CONFIG_HOME"/ipython
#export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME"/jupyter
export PSQLRC="$XDG_CONFIG_HOME/psql/config"
#export PGCLIRC="$XDG_CONFIG_HOME/pgcli/config"

# Set luarocks user config
hash luarocks 2>/dev/null && export LUAROCKS_CONFIG="$XDG_CONFIG_HOME/luarocks/config.lua"

# GO configuration
if hash go 2>/dev/null
then
	export GOPATH="$HOME/code/go"
	export PATH="$PATH:$GOPATH/bin"
fi

# Node NPM tool configuration
if hash npm 2>/dev/null
then
	export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
	export PATH="$PATH:$HOME/.local/lib/node/bin"
fi

# Rust Cargo configuration
if [ -d "$XDG_DATA_HOME"/cargo ]; then
	export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
	export CARGO_HOME="$XDG_DATA_HOME"/cargo
	export PATH="$XDG_DATA_HOME/cargo/bin:$PATH"
fi

# CPAN configuration
if hash cpan 2>/dev/null
then
	export PERL5LIB="$HOME/.local/lib/perl5${PERL5LIB+:}${PERL5LIB}"
	export PERL_LOCAL_LIB_ROOT="$HOME/.local${PERL_LOCAL_LIB_ROOT+:}${PERL_LOCAL_LIB_ROOT}"
	export PERL_MB_OPT="--install_base \"$HOME/.local\""
	export PERL_MM_OPT="INSTALL_BASE=$HOME/.local"
	hash cpanm 2>/dev/null && export PERL_CPANM_OPT="-l $HOME/.local"
fi

# Always install ruby gems local to the user
if hash gem 2>/dev/null
then
	export GEMRC="$XDG_CONFIG_HOME/gemrc/config"
	export GEM_HOME="$HOME/.local/lib/ruby/gems/$(ruby -e 'puts RbConfig::CONFIG["ruby_version"]')"
	export GEM_SPEC_CACHE="$XDG_CACHE_HOME/gem/specs"
	export PATH="$PATH:$GEM_HOME/bin"
fi

# Ack configuration
if hash ack 2> /dev/null
then
	export ACKRC="$XDG_CONFIG_HOME/ack/ackrc"
	export ACK_PAGER_COLOR="less -x4SRFX"
fi

# cURL .netrc location
if [ -d "$HOME/docs/netrc" ]; then
	export CURLOPT_NETRC_FILE="$HOME/docs/netrc/config"
fi

# Haskell cabal configuration
if hash cabal 2>/dev/null
then
	export PATH="$PATH:$HOME/.cabal/bin"
fi

# Task warrior configuration
if hash task 2>/dev/null
then
	export TASKRC="$XDG_CONFIG_HOME/task/config"
	export TASKDATA="$XDG_DATA_HOME/task"
fi

# Settings
hash nvim 2>/dev/null && export MANPAGER="nvim -c 'set ft=man' -"

# aria2c cli helper
if hash diana 2>/dev/null; then
	export DIANA_SECRET_TOKEN={{ DIANA_TOKEN }}
	export DIANA_HOST=file.host
fi

# Remote/local MPD host
export MPD_HOST="music.host"

export LESS="-FiQMXR"
export LESSCHARSET="UTF-8"
export GREP_OPTIONS="--color=auto --exclude-dir=.git"

# Disable virtualenv's prompt display
hash virtualenv 2>/dev/null && export VIRTUAL_ENV_DISABLE_PROMPT=1

if hash fzf 2>/dev/null
then
	export FZF_DEFAULT_OPTS="--bind=ctrl-d:page-down,ctrl-u:page-up,y:yank --inline-info --reverse"
fi

# vim: set ft=sh ts=2 sw=2 tw=80 noet :

# github.com/rafi/.config bash/utils

# Source all extra functions
for func in "$XDG_CONFIG_HOME/bash/functions.d/"*; do
	. "$func"
done
unset func

# Set default browser
if [[ "$OSTYPE" == "darwin"* ]]; then
	export BROWSER="open"
else
	export BROWSER="/usr/bin/google-chrome-stable"
fi

# Git prompt helpers
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWCOLORHINTS=0
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWUPSTREAM="auto"
if [ -f "$PREFIX/share/git/git-prompt.sh" ]; then
	. "$PREFIX/share/git/git-prompt.sh"
fi

# See: https://github.com/skywind3000/z.lua or https://github.com/rupa/z
# Must be loaded _after_ setting PROMPT_COMMAND
if [ -f "$PREFIX/etc/profile.d/z.lua" ]; then
	export FZ_HISTORY_CD_CMD="_zlua"
	export _ZL_ECHO=1
	export _ZL_HYPHEN=1
	eval "$(lua "$PREFIX/etc/profile.d/z.lua" --init bash enhanced once)"
elif [ -f "$PREFIX/etc/profile.d/z.sh" ]; then
	. "$PREFIX/etc/profile.d/z.sh"
elif [ -f "$PREFIX/share/z/z.sh" ]; then
	. "$PREFIX/share/z/z.sh"
fi

# See: https://github.com/changyuheng/fz
# Must be loaded _after_ sourcing z or z.lua
if [ -f "$PREFIX/etc/profile.d/fz.sh" ]; then
	. "$PREFIX/etc/profile.d/fz.sh"
fi

# See https://github.com/junegunn/fzf
if [ -f "$PREFIX/opt/fzf/shell/key-bindings.bash" ]; then
	. "$PREFIX/opt/fzf/shell/key-bindings.bash"
fi

# See: https://github.com/Canop/broot
# if [ -f "$XDG_DATA_HOME/broot/launcher.sh" ]; then
# 	. "$XDG_DATA_HOME/broot/launcher.sh"
# fi

# See: https://github.com/direnv/direnv
# if command -v direnv 1>/dev/null 2>&1; then
# 	eval "$(direnv hook bash)"
# fi

# Work with multiple versions of Python
# https://github.com/pyenv/pyenv
# But don't overcast shims when inside an activated virtualenv sub-shell
if [ -z "$VIRTUAL_ENV" ] && command -v pyenv 1>/dev/null 2>&1; then
	export PYENV_VIRTUALENV_DISABLE_PROMPT=1
	eval "$(pyenv init -)"
	# Disabled
	# if command -v pyenv-virtualenv-init 1>/dev/null 2>&1; then
	# 	eval "$(pyenv virtualenv-init -)"
	# fi
fi

# if hash hstr 2>/dev/null; then
# 	export HSTR_CONFIG=hicolor
# 	bind '"\C-r": "hstr -- \C-j"'
# fi

# vim: set ft=sh ts=2 sw=2 tw=80 noet :

# lf settings
# github.com/rafi/.config

set shell bash
set shellopts '-eu'
set ifs "\n"

set color256 on
set icons on
set hidden on
set incsearch
set scrolloff 4
set tabstop 2
set smartcase
set dircounts
set info size
set sortby natural
set ratios '1:2:3'
set timefmt '2006-01-02 15:04:05.000000000 -0700'
set previewer ~/.config/lf/preview

# keyboard mappings
# ---

# open machanisms
map <enter> open
map E &$OPENER $f
map o $mimeopen --ask $f
map O $mimeopen --ask-default $f

# general utilities
# ---

# Quickly locate a file with fzf and select it in lf
map f $lf -remote "send $id select $(fzf)"
map F find
map i $LESS='-iWQMXR~' bat --paging=always --theme=TwoDark "$f"
map I push A<c-a>
map A rename
map D trash
map H cd ..
map . set hidden!

# create directory/file
map ad push $mkdir<space>
map af push $touch<space>
map au !du -hsx * | sort -rh | less
map ai !gstat $f || stat $f; echo ; du -sh $f ; echo ; file -I -b -p $f

map <esc> unselect; clear
map zz push :z<space>

map sn :{{ set sortby natural; set info size; set preview; }}
map sa :{{ set sortby natural; set info size; set nopreview; set ratios 3:5; }}
map ss :{{ set sortby size; set info size; set preview; }}
map st :{{ set sortby time; set info time; set preview; }}

# Tmux
map sg &tmux split-window -h lf
map sv &tmux split-window -v lf

# show documentation
map g? $lf -doc | less

# beyond compare selected files/directories
map = &bcompare $fx

# execute current file (must be executable)
# map x $$f
# map X !$f

# directory aliases
map gv cd ~/.config/nvim
map gc cd ~/.config
map gp cd ~/code
map gdl cd ~/dl
map gdo cd ~/docs
map ge cd /etc
map gm cd /mnt
map go cd /opt
map g/ cd /
map g~ cd ~

# waiting for https://github.com/gokcehan/lf/issues/111
# cmap <c-right> cmd-word
# cmap <c-left> cmd-word-back

# commands
# ---

cmd mkdir %[ -n "${1}" ] && mkdir -p ${@} || echo "Argument needed"
cmd mkfile %[ -n "${1}" ] && touch ${@} || echo "Argument needed"

cmd trash %set -f; mv $fx ~/.trash
${{ mkdir -p ~/.trash }}

# replace open command with robust selection of openers
cmd open ${{
	case $(file --dereference --mime-type $f -b) in
		inode/x-empty) $EDITOR $fx ;;
		text/*) $EDITOR $fx;;
		video/*) nohup mpv $fx > /dev/null & ;;
		audio/*) nohup mpv $fx > /dev/null & ;;
		audio/midi) timidity $fx ;;
		application/epub+zip) nohup FBReader $f > /dev/null & ;;
		application/pdf) nohup zathura $f > /dev/null & ;;
		*) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
	esac
}}

# replace paste command with rsync and progress display
cmd paste &{{
	load=$(lf -remote 'load')
	mode=$(echo "$load" | sed -n '1p')
	list=$(echo "$load" | sed '1d')
	if [ $mode = 'copy' ]; then
		rsync -avh --ignore-existing --progress $list . \
			| stdbuf -i0 -o0 -e0 tr '\r' '\n' \
			| while read line; do
				echo "$line"
				lf -remote "send $id echo $line"
			done
	elif [ $mode = 'move' ]; then
		mv -n $list .
	fi
	lf -remote 'send load'
	lf -remote 'send clear'
}}

# quickly cd into frecent directories using github.com/rupa/z
cmd z ${{
	set +u
	dest=''
	# See: https://github.com/skywind3000/z.lua or https://github.com/rupa/z
	if [ -f "$PREFIX/etc/profile.d/z.lua" ]; then
		export _ZL_NO_PROMPT_COMMAND=1
		dest="$(lua "$PREFIX/etc/profile.d/z.lua" -e "$1")"
	elif [ -f "$PREFIX/etc/profile.d/z.sh" ] || [ -f "$PREFIX/share/z/z.sh"]; then
		export _Z_NO_PROMPT_COMMAND=1
		source "$PREFIX/etc/profile.d/z.sh" || source "$PREFIX/share/z/z.sh"
		dest="$(_z "$1" && pwd)"
	fi

	if test -n "${dest}"; then
		lf -remote "send $id cd '${dest}'"
	fi
}}

# dynamically set info displayed based on the number of columns
cmd resize %{{
	# w=$(tmux display-message -p '#{width}' || tput cols)
	w=$(tput cols)
	if [ $w -le 60 ]; then
		lf -remote "send $id set ratios 1"
		lf -remote "send $id set nopreview"
	elif [ $w -le 80 ]; then
		lf -remote "send $id set ratios 2:2"
	elif [ $w -le 100 ]; then
		lf -remote "send $id set ratios 1:2:3"
	else
		lf -remote "send $id set ratios 1:2:5"
	fi
	lf -remote "send $id echo 'ui adjusted for width of $w'"
}}

#  vim: set ts=2 sw=2 tw=80 noet :
